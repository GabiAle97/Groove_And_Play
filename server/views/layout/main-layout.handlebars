<!DOCTYPE html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="stylesheet" href="../css/main.css">
    <style>@import url('https://fonts.googleapis.com/css?family=Noto+Sans+JP:100,300,400,500,700,900');</style>
    <link href="https://fonts.googleapis.com/css?family=Indie+Flower" rel="stylesheet">
</head>
<nav class="nav-derecha">
    <p class="saludo" style="color: rgb(158, 140, 80)">Tracklist</p>

    
    {{#each playlist}}
        <button class = "button-nav" id="Track-{{@index}}" onclick="jump('reproductor-pers',{{@index}})">{{this.disco}} - {{this.tema}}</button><br>
    {{/each}}

</nav>
<nav>
{{#if usuario}}
    <img class= "img-usuario" src="../{{usuario}}/user.jpg">
    <p class="saludo" style="color: rgb(158, 140, 80)">Bienvenido<br><i style="color: rgb(158, 140, 80)">{{usuario}}</i></p>
    <button class = "button-nav" id="home" onclick="window.location.href = '/home'">Home</button><br>
    <button class = "button-nav" id="gallery" onclick="window.location.href = '/seeGallery'">Galería de Discos</button><br>
    <button class = "button-nav" id="upload" onclick="window.location.href = '/subirarchivos?id=0|0'">Subir Discos</button><br>
    <button class = "button-nav" id="logout" onclick="window.location.href = '/logout'">Log Out</button>
    <div class="logo">
        <img style="width: 70px;height:70px;background:none;" class="logo-img" id="imgLogo" src="../img/logo.png">
        <h3 style="font-family: 'Indie Flower', cursive;width: 111px;height:100px;background:none;color:rgb(158, 140, 80)" >Groove And Play</h3>
    </div>
    </nav>
{{else}}
    <button class = "button-nav" id="home" onclick="window.location.href = '/home'">Home</button><br>
    <button class = "button-nav" id="login" onclick="window.location.href = '/'">Log In</button><br>
    <button class = "button-nav" id="signin" onclick="window.location.href = '/registro'">Sign In</button>
    <div class="logo">
        <img style="width: 70px;height:70px;background:none;" class="logo-img" id="imgLogo" src="../img/logo.png">
        <h3 style="font-family: 'Indie Flower', cursive;width: 111px;height:100px;background:none;color:rgb(158, 140, 80)" >Groove And Play</h3>
    </div>
    </nav>
{{/if}}
{{{body}}}
<div class="contenedor-reproductor">
    <!-- Creo un DIV para guardar el length del playlist que le paso por el metodo GET de / -->
    <div id="playlist-length" style="display:none">{{playlist.length}}</div>
    {{#each playlist}}
        <!-- por cada elemento de playlist Creo un DIV oculto para guardar la url del mismo que tambien paso por el metodo GET de "/" -->
        <div id="url-audio-{{@index}}" style="display:none">{{this.url}}</div>
        <div id="usuario-audio-{{@index}}" style="display:none">{{this.usuario}}</div>
        <div id="disco-audio-{{@index}}" style="display:none">{{this.disco}}</div>
        <div id="nombre-audio-{{@index}}" style="display:none">{{this.tema}}</div>
    {{/each}}
    <audio class="reproductor-main" id="reproductor-pers"></audio>
    <div id="timeStorage" style="display:none">{{currentTime}}</div>
    <div class="divId">
        <div class="barraCurrent"><h5 class= "current-time" id="currentTime">00:00 </h5><input type="range" id="seek" value="0" max=""/></div><br>
        <div class="identificador-animado">
            <div id="identificador"></div>
        </div>
        
    </div>
    
    
    <div>
        <img class="boton-contenedor-tercero" id="replaybutton" onclick="replay(this,'reproductor-pers')"  style="display:inline-flex; width: 50px; height:50px;" src="../img/replay.png">
        <img class="boton-contenedor-secundario" id="stopbutton" onclick="stop(this,'reproductor-pers')"  style="display:inline-flex; width: 75px; height:75px;" src="../img/stop.png">
        <img class="boton-contenedor-primario" id="playbutton" onclick="playPause(this,'reproductor-pers')"  style="display:inline-flex; width: 100px; height:100px;" src="../img/play.png">
        <img class="boton-contenedor-secundario" id="nextbutton" onclick="next('reproductor-pers')"  style="display:inline-flex; width: 75px; height:75px;" src="../img/next.png">
        <div class="boton-contenedor-mute">
            <img id="mutebutton" class="mute-button" onclick="mute(this,'reproductor-pers')"  style="width: 50px; height:50px;" src="../img/speaker.png">
            
            <input type="range" class="range-volume" id="volume" value="100" max="100"/>
            
        </div>
        
    </div>
</div>
<script>

    //tomo el div que tiene le length de playlist en el innerHTML
    var divLength = document.getElementById("playlist-length")
    //lo parseo a INT para poder usarlo
    var lengthPlaylist = parseInt(divLength.innerHTML);
    //declaro la variable "numPlay" igualada a 0, que determina qué archivo de audio reproduce el reproductor
    var numPlay = 0;
    //Declaro la variable "reproductor" que toma como valor el elemento con ID "reproductor-pers" 
    var reproductor= document.getElementById("reproductor-pers");
    //declaro la variable "rangoVolume" que toma como valor el elemento con ID "volume" (control de volumen)
    var rangoVolume = document.getElementById("volume");
    //Declaro la variable "barraDespla" que toma como valor el elemento con ID "seek" 
    //(Barra de desplazamiento del tiempo del archivo de audio)
    var barraDespla = document.getElementById("seek");
    //ejecuto la función "cambiarDisplayNombrePista", para insertar el nombre de la pista actual en el reproductor
    cambiarDisplayNombrePista("main");
    //agrego un listener al elemento "rangoVolume", de tipo "input", 
    //ejecutandose cada vez que el usuario haga una desplazamiento en la barra
    rangoVolume.addEventListener("input", function(){
        //declaro la variable "valor" y la igualo al valor que toma el elemento "rangoVolume" (que el usuario establece al moverlo)
        //y lo divido en 100 para que el elemento "rangoVolume" pueda procesarlo
        let valor = (this.value)/100;
        //establezo el volumen del reproductor, igualandolo al valor que impuso el usuario
        reproductor.volume = valor;
    })
    //agrego un listener al elemento "barraDespla", de tipo "input", ejecutandose cada vez que el usuario haga una desplazamiento en la barra
    barraDespla.addEventListener("input", function() {
        //establezo el tiempo actual del reproductor, igualandolo al valor que impuso el usuario
		reproductor.currentTime = this.value;
	});
    //agrego un listener al elemento "reproductor", de tipo "timeupdate", 
    //ejecutandose cada vez que la reproduccion de un archivo avance en tiempo
    reproductor.addEventListener("timeupdate",function(){	  
        //tomo el elemento con ID "currentTime", y a su innerHTML lo igualo al retorno que brinda la funcion "hora"
        document.getElementById("currentTime").innerHTML = hora(reproductor.currentTime); 
        //declaro la variable "curtime", y la igualo al resultado de parsear a INT el tiempo actual del reproductor
        let curtime = parseInt(reproductor.currentTime, 10);
        //igualo el valor del elemento "barraDespla" al valor de la variable "curtime" obtenido anteriormente
		barraDespla.value = curtime; 
    },true);

    //devuelve el tiempo del reproductor en un formato legible
    function hora(segundos){
        //declaro la variable "d", que creará una instancia Date, 
        //que tiene como parametros el tiempo del reproductor que recibió la funcion, multiplicado por 1000
        var d=new Date(segundos*1000);
        //declaro la variable "minuto" que transforma el tiempo recibido en minutos de una forma legible
        var minuto = (d.getMinutes()<10)?"0"+d.getMinutes():d.getMinutes();
        //declaro la variable "segundo" que transforma el tiempo recibido en segundos de una forma legible
        var segundo = (d.getSeconds()<10)?"0"+d.getSeconds():d.getSeconds();
        //retorno tanto los minutos como los segundos de una forma legible
        return minuto+":"+segundo;
    }

    //funcion que ejecuta la orden de reproducir o pausar el archivo de audio
    function playPause(btn){
        //Declaro la variable "logo" que toma como valor el elemento con ID "imgLogo" 
        var logo = document.getElementById("imgLogo");
        //si el audio esta pausado
        if(reproductor.paused){
            //ejecuto la funcion "play" del archivo de audio
            reproductor.play();
            //cambio el estado de reproduccion de la animacion asignada al elemento "logo" a "running" (ejecutandose)
            logo.style.animationPlayState = "running";
            //cambio la ruta de la imagen que representa el boton de reproducir, y establezco la imagen de "pause" en vez de la imagen de "play"
            btn.src ="../img/pause.png";
            //si no está definido que se reproduzca siempre el mismo archivo de audio
            if (reproductor.loop == false){
                //agrego un listener al elemento "audio", de tipo "ended", que se ejecutará cuando la reproduccion 
                //del archivo de audio haya finalizado
                reproductor.addEventListener("ended",()=>{
                    //ejecuto la función "next" con el parametro "aud", recibido por la función "playPause"
                    next();
                })
            }
            
        //si el audio esta corriendo, es decir, no está pausado
        }else{
            //pauso la reproduccion del audio
            reproductor.pause();
            //pauso la ejecucion de la animacion del elemento "logo"
            logo.style.animationPlayState = "paused";
            //cambio la ruta de la imagen que representa el boton de reproducir, y establezco la imagen de "play" en vez de la imagen de "pause"
            btn.src ="../img/play.png";
        }
    }
    //funcion que establece el volumen de la reproducción a 0
    function mute(btn,aud){
        //Declaro la variable "aud" que toma como valor el elemento con ID que obtiene la funcion desde el parametro "aud" 
        var aud= document.getElementById(aud);
        //Declaro la variable "vol" que toma como valor el elemento con ID "volume" (barra de volumen)
        var vol = document.getElementById("volume");
        //si el volumen del audio tiene un valor de 0
        if(aud.volume == 0){
            //le asigno un valor de volumen de 1 (maximo)
            aud.volume = 1;
            //le asigno el valor del elemento "vol" a 100 (maximo)
            vol.value = 100;
            //cambio la ruta de la imagen que representa el boton de enmudecer, y establezco la imagen de "speaker" en vez de la imagen de "mute"
            btn.src ="../img/speaker.png";
        //si el volumen del audio tiene cualquier otro valor
        }else{
            //le asigno un valor de volumen de 0 (minimo)
            aud.volume = 0;
            //le asigno el valor del elemento "vol" a 0 (minimo)
            vol.value = 0;
            //cambio la ruta de la imagen que representa el boton de enmudecer, y establezco la imagen de "mute" en vez de la imagen de "speaker"
            btn.src ="../img/mute.png";
        }
    }
    //funcion que pausa la reproduccion y reestablece el tiempo de reproduccion al inicio
    function stop(btn, aud){
        //Declaro la variable "aud" que toma como valor el elemento con ID que obtiene la funcion desde el parametro "aud" 
        var aud= document.getElementById(aud);
        //Declaro la variable "play" que toma como valor el elemento con ID "playbutton" (boton de Play)
        var play = document.getElementById('playbutton');
        //si el tiempo de reproducción actual es mayor a 0
        if(aud.currentTime > 0){
            //establezco el tiempo de reproduccion actual a 0
            aud.currentTime = 0;
            //pauso la reproduccion
            aud.pause();
            //cambio la ruta de la imagen que representa el boton de reproducir, y establezco la imagen de "play" en vez de la imagen de "pause"
            play.src = "../img/play.png"
        }
    }
    //funcion que establece un loop, donde se reproducirá siempre el mismo archivo de audio
    function replay(btn, aud){
        //Declaro la variable "aud" que toma como valor el elemento con ID que obtiene la funcion desde el parametro "aud" 
        var aud= document.getElementById(aud);
        //si la propiedad "loop" del elemento "aud" está activada
        if(aud.loop == true){
            //desactivo la propiedad "loop" del elemento "aud"
            aud.loop = false;
            //cambio la ruta de la imagen que representa el boton de replay, y establezco la imagen de "replay" en vez de la imagen de "shuffle"
            btn.src = "../img/replay.png"
        //si la propiedad "loop" está desactivada
        }else{
            //activo la propiedad "loop"
            aud.loop = true;
            //cambio la ruta de la imagen que representa el boton de replay, y establezco la imagen de "shuffle" en vez de la imagen de "replay"
            btn.src = "../img/shuffle.png"
        }
    }
    //funcion que reproduce el siguiente archivo de audio de la lista de reproducción
    function next(aud){
        //Declaro la variable "divLength" que toma como valor el elemento con ID "playlist-length" 
        var divLength = document.getElementById("playlist-length")
        //Declaro la variable "lengthPlaylist" y la igualo al resultado de parsear a INT el innerHTML del elemento "divLength"
        var lengthPlaylist = parseInt(divLength.innerHTML);
        //si la variable "numPlay" es igual al largo de la lista de reproducción, menos una unidad
        if(numPlay == (lengthPlaylist-1)){
            //establezo la variable "numPlay" a 0, para volver al principio de la lista de reproduccion
            numPlay = 0;
        //si la variable "numPlay" es igual a cualquier otro valor
        }else{
            //sumo una unidad a la variable "numPlay"
            numPlay++;
        }
        //ejecuto la función "cambiarDisplayNombrePista", para insertar el nombre de la pista actual en el reproductor
        cambiarDisplayNombrePista(aud);
        

    }
    //función que ejecuta la reproduccion de un archivo de audio cuando el usuario clickea el mismo en la lista de reproducción
    function jump(aud,index){
        //igualo la variable "numPlay" al valor que recibe la función por el parametro "index" (numero de pista a reproducir)
        numPlay = index;
        //ejecuto la función "cambiarDisplayNombrePista", para insertar el nombre de la pista actual en el reproductor
        cambiarDisplayNombrePista();     
    }
    //función que inserta el nombre de la pista actual en el reproductor
    function cambiarDisplayNombrePista(origen){
        //Declaro la variable "btn" que toma como valor el elemento con ID "playbutton" 
        var btn = document.getElementById("playbutton")
        //declaro la variable "usuario" que toma como valor el innerHTML que 
        //posee el elemento con ID "usuario-audio-" + lo que tenga asignado "numPlay" (Nombre del usuario dueño del archivo de audio)
        var usuario = document.getElementById(`usuario-audio-${numPlay}`).innerHTML;
        //declaro la variable "disco" que toma como valor el innerHTML 
        //que posee el elemento con ID "disco-audio-" + lo que tenga asignado "numPlay" (Nombre del disco que contiene el archivo de audio)
        var disco = document.getElementById(`disco-audio-${numPlay}`).innerHTML;
        //declaro la variable "nombre" que toma como valor el innerHTML 
        //que posee el elemento con ID "nombre-audio-" + lo que tenga asignado "numPlay" (Nombre del archivo de audio)
        var nombre = document.getElementById(`nombre-audio-${numPlay}`).innerHTML;
        //Declaro la variable "identificador" que toma como valor el elemento con ID "identificador" 
        //(div que contendrá del nombre completo del archivo de audio)
        var identificador = document.getElementById("identificador");
        //vacio el innerHTML del elemento "identificador" para cargarlo nuevamente sin repetir información
        identificador.innerHTML = '';
        //Declaro la variable "textoID" que creará un elemento "h5" (para insertar el nombre completo del archivo de audio)
        var textoID = document.createElement("h5");
        //le seteo el atributo "class", con valor "identificador-texto", al elemento "h5" creado anteriormente (textoID)
        textoID.setAttribute("class","identificador-texto");
        //modifico el innerHTML del elemento "h5" creado anteriormente, 
        //insertandole el nombre del usuario, el disco y el nombre del archivo correspondientes
        textoID.innerHTML = `${usuario} - ${disco} - ${nombre}`;
        //inserto el elemento "h5" (textoID) dentro de "identificador" (div creado para contener dicho elemento "h5")
        identificador.appendChild(textoID);
        //cambio el source del reproductor por el url del archivo ya definido
        reproductor.src = document.getElementById(`url-audio-${numPlay}`).innerHTML;
        //seteo un TimeOut de medio segundo para darle tiempo al script de registrar el archivo de audio que debe reproducir
        setTimeout(function(){
            //establezco el limite de la barra de desplazamiento que controla el tiempo del archivo de audio, 
            //igualandolo a la duración del mismo
            barraDespla.max = reproductor.duration;
            //si el origen de la llamada no es desde el principio del script
            if(origen != "main"){
                //ejecuto la funcion "playPause", para ejecutar la reproduccion del archivo de audio definido, y las animaciones correspondientes
                playPause(btn)
            }
        },1000)
    }

</script>
</html>